---
title: "Repurposing desipramine for neurological disorders?"
author:
    name: Chris Lee
    url: https://clfee.github.io/
date: 2024-06-15
format: 
  dashboard:
    scrolling: true 
    nav-buttons: [github]
    github: https://github.com/clfee
logo: imgs/mi2.png
fig-width: 10
fig-asp: 0.3
params:
  dist_rate: 0.2
  threshold_diff: 0.02
editor_options: 
  chunk_output_type: console
---
Acid sphingomyelinase (ASM) is an enzyme with important roles in various biological processes and diseases, including cancer, cell transport mechanisms, and COVID-19 infection. ASM mainly works to produce ceramide, which is crucial for maintaining cell membranes and regulating cell functions. Recent studies have linked ASM to several neurological disorders, such as major depression, Parkinson’s disease, and Alzheimer’s disease. It has been shown that upon ASM reduction, the consequential failure of intracellular cholesterol transport results in inhibition of the autophagic flux which eventually leads to cancer cell death Kuzu et al.

Despite progress in diagnosing and treating diseases, many treatments for neurological conditions are ineffective because of the blood-brain barrier (BBB). The BBB selectively prevents many drugs from entering the brain. Therefore, repurposing medications that have anti-cancer properties and can cross the BBB could be a promising approach. Desipramine and alpha-mangostin are known ASM inhibitors that can penetrate the BBB.

To explore whether desipramine and alpha-mangostin affect the protein composition of lipid rafts in the same way, we treated cells with or without these ASM inhibitors and analyzed the results using the LC-MS/MS method. This dashboard presents the findings of our quantitative analysis.

```{r}
#| label: load-packages
#| message: false
#rm(list=ls())
library(tidyverse)
library(reshape)
library(scales)
library(DT)
library(gt)
library(ggplot2)
library(data.table)
library(ggVennDiagram)
theme_set(theme_minimal(base_size = 24, base_family = "Atkinson Hyperlegible"))
```

```{r}
#| label: load-data
#| message: false

dt <- read_csv("C:/Users/quicl/Downloads/asm.csv")
```

```{r}
#| label: prep-data

dt <- dt |>
  filter(!is.na(name))|>
  mutate(
    #category = str_to_sentence(category),
    #Name = str_to_sentence(Name),
    prot_func = paste(name,func1,func2,func3,func4,func5)
    )|>
  select(check,name, change, change_desi, change_mango,prot_func)|>
  mutate(vesicle = str_detect(prot_func, "esicl", negate = FALSE),
         kinase= str_detect(prot_func, "ase", negate = FALSE),
         autophagy = str_detect(prot_func, "utophagy", negate = FALSE),
         apoptosis = str_detect(prot_func, "poptosi", negate = FALSE))|>
  mutate(prot_function = case_when(
        autophagy == TRUE   ~ "autophagy",
        apoptosis == TRUE   ~ "apoptosis",
        vesicle == TRUE  ~ "vesicle trafficking",
        kinase == TRUE   ~ "kinase & enzyme related",
      .default = "others"))|>  
  mutate(siRNA_change = case_when(
      change > 2 ~ "Decrease",
      change < 0.5 ~ "Increase",
      .default = "No change"))|>
  mutate(desi_change = case_when(
      change_desi > 2 ~ "Decrease",
      change_desi < 0.5 ~ "Increase",
      .default = "No change"))|>
  mutate(mango_change = case_when(
      change_mango > 2 ~ "Decrease",
      change_mango < 0.5 ~ "Increase",
      .default = "No change"))

```

#  {.sidebar}

**Results**

::: {.callout-note collapse="true"}
## Table

|                           |     |
|---------------------------|-----|
| **Total Proteins found**  | 870 |
| **ASM Sensitive**         | 227 |
| **Desipramine Sensitive** | 206 |
| **Mangostin Sensitive**   | 208 |
:::

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Figure legends

**Fig 1**: Ontology analysis on identified 870 proteins. **Fig 2**: Around 40% of changes overlapped between treatments. **Fig 3**: The amount of protein changes in Desipramine and Mangostin treated samples were similar. More than 60% proteins remain unchanged after ASM reduction. **Fig 4**: Functions of protein changes in different treatments(a-c). **Fig 5**: Top 4 proteins affected after ASM reduction involved in (a) vesicle trafficking (b) apoptosis (c) enzymatic activities.
:::

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Summary

Our data shows the amount of autophagy related proteins were increased in lipid raft after ASM inhibition through siASM. However, the amount remained the same or decreased in cells treated with Mangostin and Desipramine, respectively.
:::

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## References

1.  Xiong X, Lee CF, Li W, Yu J, Zhu L, Kim Y, Zhang H, Sun H. Acid Sphingomyelinase regulates the localization and trafficking of palmitoylated proteins. Biol Open. 2019 Oct 15;8(10):bio040311. doi: 10.1242/bio.040311. PMID: 31142470; PMCID: PMC6826292.
2.  Petrosyan E, Fares J, Cordero A, Rashidi A, Arrieta VA, Kanojia D, Lesniak MS. Repurposing autophagy regulators in brain tumors. Int J Cancer. 2022 Jul 15;151(2):167-180. doi: 10.1002/ijc.33965. Epub 2022 Mar 4. PMID: 35179776; PMCID: PMC9133056.
:::

```{r}
#| label: all-values
#| results: hide

n_db <- nrow(dt)

p_vesicle <- dt |>
  count(vesicle) |>
  mutate(p = n / sum(n)) |>
  filter(vesicle == TRUE) |>
  pull(p)

p_vesicle_color <- case_when(
  between(p_vesicle, params$dist_rate,  params$dist_rate + params$threshold_diff) ~ "warning",
  p_vesicle > params$dist_rate + params$threshold_diff ~ "danger",
  .default = "light"
  )

p_autophagy <- dt |>
  count(autophagy) |>
  mutate(p = n / sum(n)) |>
  filter(autophagy == TRUE) |>
  pull(p)

p_autophagy_color <- case_when(
  between(p_autophagy,params$dist_rate,  params$dist_rate + params$threshold_dif) ~ "warning",
  p_autophagy > params$dist_rate + params$threshold_diff ~ "danger",
  .default = "light"
  )
p_apoptosis <- dt |>
  count(apoptosis) |>
  mutate(p = n / sum(n)) |>
  filter(apoptosis == TRUE) |>
  pull(p)

p_apoptosis_color <- case_when(
  between(p_apoptosis,params$dist_rate,  params$dist_rate + params$threshold_dif) ~ "warning",
  p_apoptosis > params$dist_rate + params$threshold_diff ~ "danger",
  .default = "light"
  )

p_siASM_nc <- dt |>
    count(siRNA_change) |>
    mutate(p = n / sum(n)) |>
    filter(siRNA_change != "No change") |>
    pull(p)

p_desi_nc <- dt |>
    count(desi_change) |>
    mutate(p = n / sum(n)) |>
    filter(desi_change != "No change") |>
    pull(p)

p_mango_nc <- dt |>
    count(mango_change) |>
    mutate(p = n / sum(n)) |>
    filter(mango_change != "No change") |>
    pull(p)
```

# Overview

## Row {height="60%"}

### Figure 1

![**Roles of ASM in neurological disorders** ASM is linked to major neurological disorders such as major depression, Parkinson’s disease, and Alzheimer’s disease.Medications like desipramine and alpha-mangostin, which inhibit ASM and can cross the BBB, show potential for treating neurological disorders. (Modified from Exp Mol Med (2024);56.)](dashboards/asm.png)

### Column {width="55%"}

![**Research Methods** To explore whether ASM inhibition through siASM, desipramine, and alpha-mangostin affect the protein composition of lipid rafts in the same way, we treated cells with or without these ASM inhibitors and analyzed the results using the LC-MS/MS method. This dashboard presents the findings of our quantitative analysis. (Modified from Biomolecules. 2024 Feb; 14(2): 156.)](dashboards/lipid_raft.png)

# Results

## Row {height="30%"}

```{r}
#| title: Fig 1. Ontology 

prop <- 
  dt |>
  count(prot_function) |>
  mutate(p = 100* n / sum(n))


prop |>
  ggplot(aes(x = 2, y = p, fill = prot_function )) +
  geom_col(color = "white") +
  labs(x = NULL, y = NULL) +
  geom_text(aes(label = n),
             position = position_stack(vjust = 0.5)) +
  coord_polar("y", start=0) +
  scale_fill_brewer(palette = "GnBu") +
  #ggtitle("A total of 870 Proteins identified in ASM-sensitive DRM") +
  theme_minimal()+
  xlim(c(0.2, 2.5)) +
  theme(
        panel.grid = element_blank(),
        #axis.title = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank())+
  guides(fill = guide_legend(title = "Protein Function \nof 870 identified\nDRM proteins:"))
```

```{r}
#| title: Fig 2. siASM and ASM inhibitors
# List of items
x <- list(siASM = paste0(dt$name,dt$siRNA_change), 
          Desipramine = paste0(dt$name,dt$desi_change), 
          Mangostin  = paste0(dt$name,dt$mango_change))

# Venn diagram with custom colors
ggVennDiagram(x) + 
  scale_fill_gradient(low = "#F4FAFE", high = "#4981BF")
```

## Row {height="30%"}

```{r}
#| title: Fig 3.  protein changes

desi <- dt |>
  count(desi_change) |>
  mutate(p = n / sum(n))|>
  mutate(Treatment = "Desi")

colnames(desi)[1] <- "siRNA_change"

mango <- dt |>
  count(mango_change) |>
  mutate(p = n / sum(n))|>
  mutate(Treatment = "Mango")

colnames(mango)[1] <- "siRNA_change"

desi_siRNA <- rbind(desi,mango,dt |>
  count(siRNA_change) |>
  mutate(p = n / sum(n))|>
  mutate(Treatment = "siASM"))  

desi_siRNA |>
  ggplot(aes(x = siRNA_change, y = n, group = Treatment, color = Treatment )) +

  geom_line(linewidth = 1) +
  geom_point(size = 2, color = "#0e263560") +
  geom_point(size = 4, color = "#0e263560", shape = "circle open") +
    labs(x = NULL) +
  scale_y_continuous(
    "Count",
    sec.axis = sec_axis(~ . / nrow(dt), name = "Proportion", labels = label_percent())
  )
```

### Column {width="40%"}

### Column {.tabset}

```{r}
#| title: Fig 4a. siASM
  dt |>
  count(siRNA_change, prot_function)|>
  ggplot(aes(x = n, y = fct_rev(prot_function), fill = siRNA_change)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c( "pink","steelblue","#ae8b2d"),
    guide = guide_legend(reverse = TRUE) 
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = NULL, x = NULL, fill = "siASM")+
  guides(fill = guide_legend(title = "siASM\nsensitive\nproteins"))
```

```{r}
#| title: Fig 4b.Desipramine
  dt |>
  count(desi_change, prot_function)|>
  ggplot(aes(x = n, y = fct_rev(prot_function), fill = desi_change)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c( "pink","steelblue","#ae8b2d"),
    guide = guide_legend(reverse = TRUE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = NULL, x = NULL, fill = "desi")+
  guides(fill = guide_legend(title = "Desipramine\nsensitive\nproteins"))
```

```{r}
#| title: Fig 4c.Mangostin
  dt |>
  count(mango_change, prot_function)|>
  ggplot(aes(x = n, y = fct_rev(prot_function), fill = mango_change)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c( "pink","steelblue","#ae8b2d"),
    guide = guide_legend(reverse = TRUE) 
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = NULL, x = NULL, fill = "siASM")+
  guides(fill = guide_legend(title = "Mangostin\nsensitive\nproteins"))
```

## Row {height="40%"}

```{r}
#| title: Fig 5a.Vesicle related proteins

dt_sub <- dt |> #esicle-a
  filter(str_detect(prot_func, "esicle-")) |>
  arrange(desc(change))

dt_sub <- rbind(dt_sub[1:2,],dt_sub[(nrow(dt_sub)-1):(nrow(dt_sub)),]) |> 
  mutate(name = str_replace(name,"Vesicle-trafficking protein",""))|>
mutate(name = str_replace(name,"Isoform 1 of ",""))|>
  mutate(name = str_replace(name,"Vesicle-associated membrane protein ", ""))

dt_sub[ , 1:2] <- str_split_fixed(dt_sub$name, ",", 2)

colnames(dt_sub)[1:5] <- c("name",'x', "siRNA","Desipramine","Mangosteen")

dt_sub <- melt(data.frame(dt_sub[,c(1,3:5)]),id.vars="name", measured.vars=c("change", "change_desi","change_mango"))

dt_sub |>
  mutate(value = ifelse(value >=1 , -1*value, 1/value))|>
  arrange(desc(value))|>
  ggplot(aes(fill= variable, y=value, x=name)) + 
    geom_bar(position='dodge', stat='identity')+ 
    coord_flip() +
    labs(y = NULL, x = NULL)+
    scale_fill_manual('', values=c('coral2', 'steelblue', '#ae8b2d'))

```

```{r}
#| title: Fig 5b. Apoptosis

dt_sub <- dt |> 
  filter(str_detect(prot_func, "poptosis")) |>
  arrange(desc(change))

dt_sub <- rbind(dt_sub[1:2,],dt_sub[(nrow(dt_sub)-1):(nrow(dt_sub)),]) |> 
  mutate(name = str_replace(name,"Isoform 4 of Inhibitor of nuclear factor kappa-B kinase-interacting protein","IKBIP"))|>
  mutate(name = str_replace(name,"Carboxypeptidase D", "CPD")) |>
  mutate(name = str_replace(name,"T-complex protein 1 subunit eta", "CCT7")) |>
  mutate(name = str_replace(name,"Guanine nucleotide-binding protein G", "GNG12 ,"))

dt_sub[ , 1:2] <- str_split_fixed(dt_sub$name, ",", 2)

colnames(dt_sub)[1:5] <- c("name",'x', "siRNA","Desipramine","Mangosteen")

dt_sub <- melt(data.frame(dt_sub[,c(1,3:5)]),id.vars="name", measured.vars=c("change", "change_desi","change_mango"))

dt_sub |>
  mutate(value = ifelse(value >=1 , -1*value, 1/value))|>
  ggplot(aes(fill= variable, y=value, x=name)) + 
    geom_bar(position='dodge', stat='identity')+ 
    coord_flip() +
    xlab(NULL) + 
    ylab(NULL)+
    scale_fill_manual('', values=c('coral2', 'steelblue', '#ae8b2d'))
```

```{r}
#| title: Fig 5c.Enzymes

dt_sub <- dt |> #esicle-a
  filter(str_detect(prot_func, "ase")) |>
  arrange(desc(change))

dt_sub <- rbind(dt_sub[1:2,],dt_sub[(nrow(dt_sub)-1):(nrow(dt_sub)),]) |> 
  mutate(name = str_replace(name,"CD73, 5'-nucleotidase","5'-nucleotidase"))|>
  mutate(name = str_replace(name,"ATP synthase subunit alpha, mitochondrial", "ATP5F1E")) |>
  mutate(name = str_replace(name,"Isoform alpha-enolase of Alpha-enolase", "ENO1"))

dt_sub[ , 1:2] <- str_split_fixed(dt_sub$name, ",", 2)

colnames(dt_sub)[1:5] <- c("name",'x', "siRNA","Desipramine","Mangosteen")

dt_sub <- melt(data.frame(dt_sub[,c(1,3:5)]),id.vars="name", measured.vars=c("change", "change_desi","change_mango"))

dt_sub |>
  mutate(value = ifelse(value >=1 , -1*value, 1/value))|>
  ggplot(aes(fill= variable, y=value, x=name)) + 
    geom_bar(position='dodge', stat='identity')+ 
    coord_flip() +
    xlab(NULL) + 
    ylab(NULL)+
  scale_fill_manual('', values=c('coral2', 'steelblue', '#ae8b2d'))
```

# Data

```{r}
dt[,c(2:5)] |>
#  arrange(id) |>
  datatable(
    colnames = c("Protein Name","Change in siASM", "Change in Desi", "Change in Mangosteen"),
    options = list(dom = 'ftp', paging = TRUE)
    )
```
