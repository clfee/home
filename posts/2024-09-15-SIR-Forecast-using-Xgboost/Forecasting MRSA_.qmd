---
title: "MRSA Forecast"
author:
    name: Chris Lee
    url: https://clfee.github.io/
date: 2024-09-15
format: 
  html:
        html-math-method: katex
        code-tools: true
        self-contained: true
        toc: true
        grid: 
            margin-width: 350px
  docx: default
  pdf: default
df-print: kable
theme: [sandstone, theme/custom.scss]
fig-width: 10
fig-height: 12
fig-asp: 0.3
params:
  id: 13
  ARDS: 389
  no_ARDS: 7395
editor_options: 
  chunk_output_type: console
execute: 
  echo: fenced
reference-location: margin
citation-location: margin
---

Forecasting is beginning to be integrated into decision-making processes not only for business operation but also for infectious disease outbreak response. 

The demo uses the data from [California Health and Human Services Open Data Portal](https://data.chhs.ca.gov/dataset/methicillin-resistant-staphylococcus-aureus-mrsa-bloodstream-infections-bsi-in-california-hospitals). All California general acute care hospitals are required to report Methicillin-resistant Staphylococcus aureus (MRSA) bloodstream infection (BSI) cases that occur following hospitalization.

MRSA as its name suggested is caused by strains of Staphylococcus aureus develop antibiotic resistance. The bacteria can develop antibiotic resistance naturally in the environment or through defense mechanisms to block or destroy antibiotic drugs. MRSA is contagious. It can spread through skin- to-skin contact or on surfaces [1](https://my.clevelandclinic.org/health/diseases/11633-methicillin-resistant-staphylococcus-aureus-mrsa).

Goal: In this post, our goal is to predict Standardized Infection Ratio (SIR) for each facility in 2023.


```{r}
#| context: setup
#| include: false

# Load required packages
rm(list=ls())
library(dplyr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(scales)
library(VIM)
library(xgboost)
library(caret)
library(gganimate)
library(gifski)
source("~/Github/ARDS/helper_ARDS.R")

# Load data

include_col <- c( "Year","Facility_ID", "Infections_Reported", "Patient_Days", "SIR")
map_risk   <- c("Facility_ID","Hospital_Category_RiskAdjustment", "Hospital_Type", "County" )

data_2023 <-read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/15c4962f-e357-4b03-9d24-655a2bc8030c/download/mrsa_bsi_odp_2023.csv")|> filter(Hospital_Type!="Rehabilitation Unit" & Facility_ID !="NA")
data_2022 <- read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/3ff809c6-c1e2-4107-be0c-f976521aadb2/download/mrsa_bsi_odp_2022.csv")|> filter(Hospital_Type!="Rehabilitation Unit" & Facility_ID !="NA")
data_2021 <- read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/23bef156-ae4d-4800-8512-d29660b2269f/download/cdph_mrsa_bsi_odp_2021.csv")|> filter(Hospital_Type!="Rehabilitation Unit" & Facility_ID !="NA")
data_2019 <- read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/62aead61-e320-4a74-b64c-1f65efa72b35/download/cdph_mrsa_bsi_odp_2019.csv")|> filter(Facility_Type!="Rehabilitation Unit" & Facility_Type!="Free-Standing Rehabilitation" & Facility_ID !="NA")|> 
  group_by(Facility_ID)|> mutate(Infections_Reported = sum(na.omit(Infections_Reported)),
                                 SIR = mean(na.omit(SIR)),
                                 Patient_Days = mean(na.omit(Patient_Days)))

data_2018 <-read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/20f00131-12a0-4551-a2f9-12065b05c2cf/download/cdph_mrsa_bsi_odp_2018.csv")|> filter(Hospital_Type!="Rehabilitation Unit" &Hospital_Type!= "Free-Standing Rehabilitation Hospital"& Facility_ID !="NA")
data_2017 <-read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/6f09b0b4-806a-4841-804f-9da529433f0c/download/mrsa_bsi_2017_ca_cdph.csv")|> filter(Hospital_Type!="Rehabilitation Unit" & Facility_ID !="NA")|> select(all_of(include_col))
data_2016 <-read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/01217122-6605-44c3-9fcd-4f5ad0580da4/download/mrsa-in-hospitals-2016.csv")|> filter(Facility_Type!="Rehabilitation Unit" &Facility_Type!= "Free-Standing Rehabilitation Hospital" & Facility_ID !="NA")|> select(any_of(include_col))
data_2015 <-read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/54cd4bd1-6d22-42b6-b224-9d2d91edfa44/download/mrsa-in-hospitals-2015.csv")|> mutate(Facility_ID = as.character(Facility_ID1), Infections_Reported = Hospital_Onset_Cases)|> select(any_of(include_col))
data_2014 <- read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/e1b19ac7-ecb0-4d7f-b2fa-762ab0b58e2b/download/mrsa-in-hospitals-2014.csv")|> mutate(Facility_ID = as.character(Facility_ID1), Infections_Reported = Cases)|> select(any_of(include_col))
data_2013 <- read_csv("https://data.chhs.ca.gov/dataset/a345bba7-25ed-4019-b6e3-0b597bea7368/resource/06eba1c9-a67d-4436-a362-9a7eff0284db/download/mrsa-in-hospitals-2013.csv")|> mutate(Facility_ID = as.character(FACID1), Infections_Reported = Infection_Count)|> select(any_of(include_col))

# map facility id with risk category
map_risk_list <-data_2023|> select(all_of(map_risk))|> filter(Facility_ID != "NA")

map_risk_list_others <-bind_rows(data_2022,data_2021,data_2019,data_2018)|>
                       select(all_of(map_risk))|>
                       filter(Facility_ID != "NA")
x_diff <- setdiff(map_risk_list_others$Facility_ID,map_risk_list$Facility_ID)

no2023_map_risk_list <- map_risk_list_others |>
            filter(Facility_ID %in% x_diff,
                   Facility_ID != 140000797,
                   Hospital_Type != "NA")

map_risk_list <-bind_rows(unique(map_risk_list),unique(no2023_map_risk_list))|>
            mutate(Hospital_Type =  str_remove(Hospital_Type,"[)]"),
                   Hospital_Type =  str_remove(Hospital_Type,"[(]"),
                   Hospital_Type =  str_remove(Hospital_Type,"[,]"))

# Combine data
mrsa_combine <- bind_rows(data_2023|> select(any_of(include_col)),
                          data_2022|> select(any_of(include_col)), 
                          data_2021|> select(any_of(include_col)), 
                          data_2019|> select(all_of(include_col)), 
                          data_2018|> select(all_of(include_col)), data_2017, data_2016
                          , data_2015, data_2014)


# full join with hospital info and remove redundant data
mrsa_combine <- full_join(unique(mrsa_combine), unique(map_risk_list)|> filter(Facility_ID %in% mrsa_combine$Facility_ID ), by = "Facility_ID")


# helper function
cal_freq <- function(var, data){
    dt <- as.data.frame(table(data[,var]))
    dt$namex <- colnames(data)[var]
    dt$Freqx <- dt$Freq/nrow(data)
    is.na(dt) <- "missing"
    return(dt[,c("namex","Var1","Freqx")])
} 


```

Overview of variables used in the post. 

## Data Overview
```{r}
#| label: Overview data
#| fig-cap: " Distribution of the variables"
#| code-fold: true
#| fig-width: 8
my_glimpse(data = mrsa_combine|> select(-Facility_ID))[-7,]
```

## Data Visualization

Overall the distribution of County, Hospital_Category_RiskAdjustment, and Hospital_Type didn't have major changes from 2014 to 2023. However, two new clinic categories were found in the Hospital_Type after 2016. This could be possible, either there were not many rehabilitation Hospitals or Units or they were not included in the study prior to 2016.  

```{r}
#| label: Overview categorical data
#| fig-cap: " Distribution of the categorical variables"
#| warning: false
#| code-fold: true
#| fig-width: 8
#| fig-height: 10

freq_data <- function(df, year){
  df <- mrsa_combine |> 
       filter(Year == year)|>
       
       mutate(`Hospital Type`  = case_when(Hospital_Type == "Community, <125 Beds"~ "<125",
                                      Hospital_Type == "Community, 125-250 Beds"~ "125-250",
                                      Hospital_Type == "Community, >250 Beds"~ ">250",
                                      .default = Hospital_Type),
             `Risk Adjustment`   = Hospital_Category_RiskAdjustment)|>
    select(Facility_ID, `Hospital Type`, `Risk Adjustment`, County)
  
  df <- as.data.frame(df)
  results_list <- vector("list", ncol(df) - 1)
  
  # Loop through the columns starting from the 2nd column
  for (i in 2:ncol(df)) {
       # Store the result of cal_freq(i) in the list
       results_list[[i - 1]] <- cal_freq(i, df)
      }
  df <- do.call(rbind, results_list)

  # label bar graph
  df$vars <- ifelse(df$Freqx > 0.15, as.character(df$Var1), "")
  return(df)
}

d2014 <- freq_data(df, 2014)
d2014 <- freq_data(df, 2014)
d2016 <- freq_data(df, 2016)
d2019 <- freq_data(df, 2019)
d2023 <- freq_data(df, 2023)
d2014$Year <- 2014
d2016$Year <- 2016
d2019$Year <- 2019
d2023$Year <- 2023

p <-
rbind(d2014,d2016,d2019, d2023)|>
    #filter(Year == 2013)|>
    #select(-Year)|>
    ggplot(aes(x = round(Freqx,2), y = fct_rev(namex), fill = Var1)) + 
    geom_col(position = "fill", color = "white") +
    scale_x_continuous(labels = label_percent()) +
    labs(y = NULL, x = NULL, fill = "var1")+
    guides(fill="none") +
    geom_text(aes(label = vars), position = position_stack(vjust = 0.75), color = "white")+
    theme_void()  

p+transition_time(as.integer(Year))+  
  enter_fade() +
  exit_fade()+labs(title = "Year: {frame_time}")

#anim_save(filename="animation.gif", mygif)
```

## Distribution of SIR values with respect to Hospital_Type, 2014-2023

We can see that the average SIR is about the same in all hospital types except the community hospital <125*. The SIR value in the community hospital <125 ranges from 0 to more than 15, it poses the biggest SIR variation among the hospital types. In addition, We cab use ANOVA analysis to check if the mean SIR was truly the same for the rest of hospital types. 

*Critical Access hospital/unit and free-Standing Rehabilitation are not included in the plot due to incomplete SIR data. 

```{r}
#| label: SIR distribution
#| fig-cap: " Distribution of SIR values with respect to Hospital_Type"
#| code-fold: true
#| fig-width: 8
#| fig-height: 10
#| warning: false

color_palette <- c("#167bb2","#aa85d6","#7A6C5D","#56c552","#d88bb4","#dd847a","#16b29b","red","#dcda98", "green")

mrsa_combine|>
   filter(
          Hospital_Type != "Free-Standing Rehabilitation",
          Hospital_Type != "Critical Access")|>
          mutate(Hospital_Type = case_when(Hospital_Type == "Community <125 Beds"~ "Comm. <125",
                                      Hospital_Type == "Community 125-250 Beds"~ "Comm. 125-250",
                                      Hospital_Type == "Community >250 Beds"~ "Comm.>250",
                                      Hospital_Type == "Long-Term Acute Care"~ "Long-Acute",
                                      .default = Hospital_Type))|>
  
    ggplot(aes(x= Hospital_Type, y= SIR, fill=Hospital_Type))+
     geom_boxplot()+
    scale_fill_manual(values=color_palette)+
       theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle(paste0("Standardized Infection Ratio (SIR) in each hospital type ")) +
    xlab("")+ylab("") 
```
 
Next, we will be analyzing Hospital_Type, County with respect to a numerical SIR.
The SIR ratio was gradually increased in the Pediatric hospitals, unlike in the Long-Term Acute Care hospital, the ratio was slowly decreased except in 2022. In 2021, Community <125 Beds, Community 125-250 Beds, "Community >250 Beds, and Major Teaching, had the highest SIR ratio.  

```{r}
#| title: SIR trend 
#| code-fold: true
#| warning: false
#| fig-width: 8
#| fig-height: 8
#| fig-column: page-left
 
mrsa_combine|>
  group_by(Year, Hospital_Type)|>
  summarise(avg_SIR = mean(na.omit(SIR)))|>
  mutate(Risk_Category = Hospital_Type)|>
  filter(Risk_Category != "NA", 
         Year != 2013)|>
  ggplot(aes(x= as.character(Year), y= avg_SIR, color=Hospital_Type))+
    
    geom_point(shape=21, color="black", fill="white", size=4) +
   # geom_point(size = 4, color = "#0e263560", shape = "circle open") +
  geom_line(aes(group=Risk_Category),linewidth = 1)+
  geom_line(linewidth = 2.5) +
  theme_bw()+
      theme(#axis.text.x=element_blank(),
            axis.text=element_text(size=10),
            legend.position = "right",
            axis.line = element_line(colour = "black"),
            panel.grid.major = element_blank(),
            panel.grid.minor = element_blank(),
            panel.border = element_blank(),
            panel.background = element_blank()
            )+
  scale_color_manual(values=color_palette) +
    labs(y="Average  Standardized Infection Ratio (SIR)", x="", 
       title="Average Standardized Infection Ratio 2014-2023")
```

The trends of SIR ratio look similar in the more densely populated counties after 2020.

```{r}
#| title: SIR trend 
#| code-fold: true
#| warning: false
#| fig-width: 8
#| fig-height: 8

 
mrsa_combine|>
  filter(County == "Orange" | County == "San Francisco"| County=="Merced"| County=="Yuba")|>
  group_by(Year, County)|>
  summarise(avg_SIR = mean(na.omit(SIR)))|>
  ggplot(aes(x= as.character(Year), y= avg_SIR, color=County))+
    
    geom_point(shape=21, color="black", fill="white", size=4) +
   # geom_point(size = 4, color = "#0e263560", shape = "circle open") +
  geom_line(aes(group=County),linewidth = 1)+
  geom_line(linewidth = 2.5) +
  theme_bw()+
      theme(#axis.text.x=element_blank(),
            axis.text=element_text(size=10),
            legend.position = "right",
            axis.line = element_line(colour = "black"),
            panel.grid.major = element_blank(),
            panel.grid.minor = element_blank(),
            panel.border = element_blank(),
            panel.background = element_blank()
            )+
    scale_color_manual(values=color_palette) +
    labs(y="Average  Standardized Infection Ratio (SIR)", x="", 
       title="Average Standardized Infection Ratio 2014-2023")
```


Based on  the scatter plots in the previous [post](https://clfee.github.io/home/posts/2024-09-01-Graphs-for-Communication), it seems there is a linear pattern between Patient_Days and Infections_Reported variables. We can further compare results between variables using correlation analysis.

```{r}
#| label: Correlation
#| fig-cap: " Correlation of variables"
#| code-fold: true
#| warning: false
#| fig-width: 6
#| fig-height: 6

# spearman correlation

dt <- mrsa_combine|>
      mutate(Hospital_Type= ifelse(is.na(Hospital_Type), "mixed", Hospital_Type),
            RiskAdjustment = ifelse(is.na(Hospital_Category_RiskAdjustment), "mixed",
                                                       Hospital_Category_RiskAdjustment))|>
      mutate(Hospital_Type= as.numeric(as.factor(Hospital_Type)),
             RiskAdjustment = as.numeric(as.factor(RiskAdjustment)),
             County = as.numeric(as.factor(County)))|>
      select(SIR, RiskAdjustment, County,Patient_Days,Infections_Reported)

cor_ <- round(cor(na.omit(dt), method = 'spearman'),2)
cor_matrix <- melt(cor_)
colnames(cor_matrix ) <- c("X1","X2","value")
ggplot(cor_matrix, aes(X1, X2, fill= value)) + 
  geom_tile() +
  scale_fill_gradient(low="lightgrey", high="#dd847a")+
  xlab("")+ylab("")
```

The value of the correlation coefficient always ranges between 1 and -1, and we will treat it as a general indicator of the strength of the relationship between variables. Since the data is not normally distributed, we will use Spearman’s rho (Spearman’s rank correlation coefficient). It’s a rank correlation coefficient because it uses the rankings of data from each variable (e.g., from lowest to highest) rather than the raw data itself.

We can see that the SIR has a positive strong correlation with Infections_Reported (correlation coefficients value 0.78), and it has a much weaker correlation with Patient_Days(correlation coefficients value 0.12).The results also show a positive strong correlation between Patient_Days and Infections_Reported (correlation coefficients value 0.58). Weak Correlation is found between Hospital Risk Adjustment and Patient_Days(0.27). No correlations is found between Hospital Risk Adjustment and Infections_Reported(0.04), and between Hospital Risk Adjustment and SIR(0.03). County seems to have no correlation with other variables. 

## Base forecast model (Xgboost)

```{r}
#| title: Forecast base model
#| code-fold: true
#| warning: false
#| fig-width: 8
#| fig-height: 10


# Step 1: Data Preparation
dt_all <- mrsa_combine|>
    mutate(Hospital_Type  = case_when(Hospital_Type == "Community, <125 Beds"~ 1,
                                      Hospital_Type == "Community, 125-250 Beds"~ 2,
                                      Hospital_Type == "Community, >250 Beds"~ 3,
                                      Hospital_Type == "Major Teaching"~ 4,
                                      .default = 0),
          Hospital_Type = as.factor(Hospital_Type),
          Facility_ID = as.factor((Facility_ID)))|>
    select(-c(Hospital_Category_RiskAdjustment,County))

# Step 2: Fill missing values
# Use KNN to fill missing values
dt_no2023 <- kNN(dt_all|>filter(Year != 2023), variable = "SIR", k = 10)
dt_all <-     rbind(dt_no2023, dt_all|> filter(Year == 2023)|> mutate(SIR_imp = FALSE))|>           
                group_by(Facility_ID)|> 
                arrange(Facility_ID, (as.numeric(Year)))|>
                mutate(lag_IR = dplyr::lag(Infections_Reported, n = 1,default = NA))|>
                mutate(lag_PD = dplyr::lag(Patient_Days, n = 1, default = NA))|>
                mutate(lag_SIR = dplyr::lag(SIR, n = 1, default = NA),
                        impute_SIR = as.factor(ifelse(SIR_imp == TRUE , 1, 0)))
                 
dt <- na.omit(dt_all)|>select(-c(Infections_Reported,Patient_Days,SIR_imp))

# Step 3: Data Splittingv 
# Split the data into training and test sets  
train_data <- dt|> filter(Year != 2023)
test_data <- dt|> filter(Year == 2023)

# Step 4: Prepare data for XGBoost
train_labels <- train_data$SIR
test_labels <- test_data$SIR

# Convert factors to numeric for xgboost
dtrain <- model.matrix(~. -1, data = train_data |> select(-Year, -SIR))
dtrain <- xgb.DMatrix(data = dtrain, label = train_labels)
dtest <- model.matrix(~. -1, data = test_data |> select(-Year, -SIR))
dtest <- xgb.DMatrix(data = dtest, label = test_labels)

# Step 5: Train XGBoost Model
params <- list(objective = "reg:squarederror", eval_metric = "rmse",booster= "gblinear")
xgb_model <- xgb.train(params = params, data = dtrain, nrounds = 300,  verbose = 0, watchlist = list(train = dtrain, test = dtest), early_stopping_rounds = 50)


# Step 6: Forecast and Evaluate
preds <- predict(xgb_model, dtest)

# Evaluate model performance using RMSE
rmse <- sqrt(mean((test_labels - preds)^2))
cat("RMSE:", rmse, "\n")

# Step 7: Plot the Results
test_data$predicted_SIR <- preds
test_data$diff_act_forecast <- abs(test_data$predicted_SIR-test_data$SIR)
test_data <- full_join(test_data|>select(-Hospital_Type), unique(map_risk_list),by= "Facility_ID")
na.omit(test_data) |>
   filter(Hospital_Type == "Long-Term Acute Care")|>
   #filter(Hospital_Type==4, County == "Los Angeles" )|>
   ggplot(aes(x= Facility_ID))+
   geom_point(aes(y = SIR, color = "Actual"), fill = NA) +
   geom_point(aes(y = predicted_SIR, color = "Forecasted"), fill = NA) +
  theme_minimal()+
  theme(
      legend.position="bottom",
      plot.title = element_text(size=11),
      axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
    ) +
    labs(title = "Year 2023 Forecast vs Actuals", y = "SIR", x = "", caption ="Produced by CF Lee" )
```

